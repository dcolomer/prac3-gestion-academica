<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           https://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- 
	    Cargar los detalles de configuracion de la BD desde el fichero db.properties.
	-->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:/db.properties" />
	</bean>
	
	<!--
		Configurar el dataSource a partir del fichero db.properties
		Usa HikariCP (recomendada en Spring 6) para la gestión eficiente de conexiones.
		Configura la URL de la BD, usuario, contraseña y driver JDBC.
	-->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <property name="jdbcUrl" value="${db.url}"/>
        <property name="username" value="${db.username}"/>
        <property name="password" value="${db.password}"/>
        <property name="driverClassName" value="${db.driver}"/>
        <property name="maximumPoolSize" value="10"/> <!-- Opcional, ajusta según necesidades -->
        
        <property name="connectionTimeout" value="30000"/>
		<property name="idleTimeout" value="600000"/>
		<property name="maxLifetime" value="1800000"/>
    </bean>

	<!-- 
		Configuración de JdbcTemplate
		Se encarga de ejecutar consultas SQL sin necesidad de escribir código JDBC repetitivo. 
	-->
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

	<!-- 
		DAO (Data Access Object)
		Un bean de acceso a datos (AcademiaDAO) que usará JdbcTemplate para realizar consultas.
		
		Spring ve que el método está anotado con @Autowired y entonces invoca
		al método setJdbcTemplate y le pasa el parámetro jdbcTemplate:
		
		@Autowired 
		public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
        	this.jdbcTemplate = jdbcTemplate;
    	} 
	-->
    <bean id="academiaDAO" class="dao.AcademiaDAOImplSpring">
        <property name="jdbcTemplate" ref="jdbcTemplate"/>
    </bean>
    
</beans>